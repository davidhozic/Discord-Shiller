diff --git a/src/_discord/http.py b/src/_discord/http.py
index f71dc9e..a64bbe0 100644
--- a/src/_discord/http.py
+++ b/src/_discord/http.py
@@ -237,7 +237,7 @@ class HTTPClient:
         }
 
         if self.token is not None:
-            headers["Authorization"] = f"Bot {self.token}"
+            headers["Authorization"] = f"Bot {self.token}" if self.is_bot else self.token
         # some checking if it's a JSON request
         if "json" in kwargs:
             headers["Content-Type"] = "application/json"
@@ -311,36 +311,7 @@ class HTTPClient:
 
                         # we are being rate limited
                         if response.status == 429:
-                            if not response.headers.get("Via") or isinstance(data, str):
-                                # Banned by Cloudflare more than likely.
-                                raise HTTPException(response, data)
-
-                            fmt = 'We are being rate limited. Retrying in %.2f seconds. Handled under the bucket "%s"'
-
-                            # sleep a bit
-                            retry_after: float = data["retry_after"]
-                            _log.warning(fmt, retry_after, bucket)
-
-                            # check if it's a global rate limit
-                            is_global = data.get("global", False)
-                            if is_global:
-                                _log.warning(
-                                    "Global rate limit has been hit. Retrying in %.2f seconds.",
-                                    retry_after,
-                                )
-                                self._global_over.clear()
-
-                            await asyncio.sleep(retry_after)
-                            _log.debug("Done sleeping for the rate limit. Retrying...")
-
-                            # release the global lock now that the
-                            # global rate limit has passed
-                            if is_global:
-                                self._global_over.set()
-                                _log.debug("Global rate limit is now over.")
-
-                            continue
-
+                            raise HTTPException(response, data)
                         # we've received a 500, 502, or 504, unconditional retry
                         if response.status in {500, 502, 504}:
                             await asyncio.sleep(1 + tries * 2)
@@ -392,13 +363,14 @@ class HTTPClient:
 
     # login management
 
-    async def static_login(self, token: str) -> user.User:
+    async def static_login(self, token: str, *, bot: bool) -> user.User:
         # Necessary to get aiohttp to stop complaining about session creation
         self.__session = aiohttp.ClientSession(
             connector=self.connector, ws_response_class=DiscordClientWebSocketResponse
         )
         old_token = self.token
         self.token = token
+        self.is_bot = bot
 
         try:
             data = await self.request(Route("GET", "/users/@me"))
